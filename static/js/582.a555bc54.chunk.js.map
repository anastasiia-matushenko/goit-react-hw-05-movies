{"version":3,"file":"static/js/582.a555bc54.chunk.js","mappings":"8LAiCA,UA7BuB,WACnB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,EAAAA,kBAA4BR,GAASS,MAAK,SAAAC,GACtC,IAAKA,EAAKC,OACN,MAAM,IAAIC,MAAM,yCAEpBR,EAAQM,EACX,IAAEG,OAAM,SAAAC,GACLR,EAASQ,EAAIC,QAChB,GACJ,GAAE,CAACf,KAGA,qCAAKK,IAAS,iEACTF,EAAKQ,OAAS,IAAK,wBACfR,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACJ,2BACE,oCAAYD,MACZ,uBAAIC,MAFGF,EADL,QAQzB,C","sources":["pages/ReviewsSubPage/ReviewsSubPage.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { MoviesApi } from \"services/moviesApi\";\n\nconst ReviewsSubPage = () => {\n    const { movieId } = useParams();\n    const [data, setData] = useState([]);\n    const [error, setError] = useState(\"\");\n\n    useEffect(() => {\n        MoviesApi.fetchMovieReviews(movieId).then(resp => {\n            if (!resp.length) {\n                throw new Error(\"We don`t have reviews for this movie.\")\n            }\n            setData(resp);\n        }).catch(err => {\n            setError(err.message);\n        });\n    }, [movieId])\n\n    return (\n        <>  {error && <p>We don`t have reviews for this movie.</p>}\n            {data.length > 0 && <ul>\n                {data.map(({ id, author, content\n                }) => <li key={id}>\n                        <p>Author: {author}</p>\n                        <p>{content}</p>\n                    </li>)}\n            </ul>}\n        </>\n    )\n}\n\nexport default ReviewsSubPage;"],"names":["movieId","useParams","useState","data","setData","error","setError","useEffect","MoviesApi","then","resp","length","Error","catch","err","message","map","id","author","content"],"sourceRoot":""}