{"version":3,"file":"static/js/43.6bd66f0b.chunk.js","mappings":"sOAGMA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,4HASJE,EAAYF,EAAAA,GAAAA,IAAH,0E,2BC0Cf,EAhDyB,WACrB,IAAMG,ECHmB,WAC3B,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOD,EAAP,KAAcE,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,eAAyBH,GACtBI,KAAKL,GACLM,OAAM,SAAAC,GACLC,MAAMD,EAAIE,QACX,GACJ,GAAE,CAACR,IAEGH,CACR,CDViBY,GACRC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAAKhB,EAAL,CAIA,IAAQiB,EACJjB,EADIiB,MAAOC,EACXlB,EADWkB,SAAUC,EACrBnB,EADqBmB,aAAcC,EACnCpB,EADmCoB,aAAcC,EACjDrB,EADiDqB,OAAQC,EACzDtB,EADyDsB,YAEvDC,EAAcC,KAAKC,MAAqB,GAAfL,GAE/B,OAEI,8BACKpB,IAAU,iCACP,mBACI0B,QAAS,WAAO,IAAD,IACXb,EAAQ,iBAACE,QAAD,IAACA,GAAD,UAACA,EAAUY,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IACrC,EAHL,sBAOA,UAAC7B,EAAD,YACI,gBAAK8B,IAAG,yCAAoCP,GAAeQ,IAAKb,KAChE,4BACI,0BAAKA,EAAL,KAAcE,EAAaY,MAAM,EAAG,GAApC,QACA,wCAAgBR,EAAhB,QACA,sCAAcL,MACd,uBAAIG,EAAOW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OAAkB,4BAAgBA,EAAhB,MAAWD,EAA7B,aAGvB,oDACA,2BACI,yBAAI,SAACrC,EAAD,CAAMuC,GAAG,OAAOR,MAAOZ,EAASY,MAAhC,4BACJ,yBAAI,SAAC/B,EAAD,CAAMuC,GAAG,UAAUR,MAAOZ,EAASY,MAAnC,iCAER,SAAC,EAAAS,SAAD,CAAUC,SAAU,KAApB,UACI,SAAC,KAAD,UAhCf,CAwCJ,C","sources":["pages/MovieDetailsPage/MovieDetailsPage.styled.js","pages/MovieDetailsPage/MovieDetailsPage.jsx","hooks/useFetchMovie.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Link = styled(NavLink)`\n  text-decoration: none;\n  font-size: 18px;\n  color: orange;\n  &.active {\n    color: red;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  padding: 30px;\n  gap: 50px;\n`;\n\nexport { Link, Container };\n","import { Suspense } from \"react\";\nimport { Outlet, useLocation, useNavigate } from \"react-router-dom\";\nimport { Link } from \"./MovieDetailsPage.styled\";\nimport { useFetchMovie } from \"hooks/useFetchMovie\";\nimport { Container } from \"./MovieDetailsPage.styled\";\n\nconst MovieDetailsPage = () => {\n    const movie = useFetchMovie();\n    const navigate = useNavigate();\n    const location = useLocation();\n    if (!movie) {\n        return;\n    }\n\n    const { title, overview, release_date, vote_average, genres, poster_path\n    } = movie;\n    const voteAverage = Math.floor(vote_average * 10);\n\n    return (\n\n        <>\n            {movie && (<>\n                <button\n                    onClick={() => {\n                        navigate(location?.state?.from ?? \"/\");\n                    }}\n                >\n                    Go back\n                </button>\n                <Container>\n                    <img src={`https://image.tmdb.org/t/p/w300${poster_path}`} alt={title} />\n                    <div>\n                        <h2>{title} ({release_date.slice(0, 4)})</h2>\n                        <p>User score: {voteAverage}%</p>\n                        <p>Overview: {overview}</p>\n                        <p>{genres.map(({ id, name }) => <span key={id}>{name} </span>)}</p>\n                    </div>\n                </Container>\n                <h3>Additional information</h3>\n                <ul>\n                    <li><Link to=\"cast\" state={location.state}>CastSubPage</Link></li>\n                    <li><Link to=\"reviews\" state={location.state}>ReviesSubPage</Link></li>\n                </ul>\n                <Suspense fallback={null}>\n                    <Outlet />\n                </Suspense>\n            </>\n            )}\n\n        </>\n\n    );\n};\n\nexport default MovieDetailsPage;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MoviesApi } from 'services/moviesApi';\n\nexport const useFetchMovie = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    MoviesApi.fetchMovieById(movieId)\n      .then(setMovie)\n      .catch(err => {\n        alert(err.message);\n      });\n  }, [movieId]);\n\n  return movie;\n};\n"],"names":["Link","styled","NavLink","Container","movie","useState","setMovie","movieId","useParams","useEffect","MoviesApi","then","catch","err","alert","message","useFetchMovie","navigate","useNavigate","location","useLocation","title","overview","release_date","vote_average","genres","poster_path","voteAverage","Math","floor","onClick","state","from","src","alt","slice","map","id","name","to","Suspense","fallback"],"sourceRoot":""}